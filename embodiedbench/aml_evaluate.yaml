description: EmbodiedBench evaluation with models served via VLLM

target:
  service: sing
  name: palisades27
  workspace_name: lalidenamlws

environment:
  image: amlt-sing/acpt-torch2.7.1-py3.10-cuda12.6-ubuntu22.04
  setup:
  - set -ex
  - echo "start"
  - sudo apt-get update
  - sudo apt-get install -y libc6-dev libgdiplus libx11-dev libxcursor-dev libxrandr-dev
    libxi-dev libgl1-mesa-dev libglu1-mesa-dev
  - sudo apt-get install -y libxss1 libgconf-2-4 libxtst6 libxrandr2 libasound2 libpangocairo-1.0-0
    libatk1.0-0 libgtk-3-0 libgdk-pixbuf2.0-0
  - sudo apt-get install -y mono-runtime mono-complete

storage:
  magmathor:
    storage_account_name: magmardata
    container_name: magmathor
  model:
    storage_account_name: reubenprojects
    container_name: model

code:
  local_dir: .
  ignore:
  - .venv
  - .github

search:
  job_template:
    name: eval-{model_config}
    sku: 1x 40G1-A100
    priority: high
    sla_tier: Premium
    process_count_per_node: 1
    identity: managed
    command:
    - set -ex
    - echo "--= Starting Commands =--"
    - export MODEL_CONFIG_STR='{model_config}'
    - export MODEL_NAME="$$(echo "$$MODEL_CONFIG_STR" | cut -d':' -f1)"
    - export MODEL_PATH="$$(echo "$$MODEL_CONFIG_STR" | cut -d':' -f3)"
    - export MODEL_CHECKPOINT="/mnt/$$MODEL_PATH"
    - echo Model Name is $$MODEL_NAME
    - echo Model Path is $$MODEL_PATH
    - echo Full Model Checkpoint Path is $$MODEL_CHECKPOINT

    - echo "--= Installing UV =--"
    - curl -LsSf https://astral.sh/uv/install.sh | sh
    - export PATH="$$HOME/.local/bin:$$PATH"

    - echo "--= Starting VLLM serve in background =--"
    - nohup uv run --with vllm vllm serve "$$MODEL_CHECKPOINT" --host 0.0.0.0 --port
      8000 > vllm_server.log 2>&1 &
    - echo "VLLM server started in background"
    - echo "Waiting for VLLM server to start..."
    - sleep 10
    - echo "Checking if VLLM server is ready..."
    - timeout 300 bash -c 'until curl -s http://localhost:8000/v1/models; do echo
      "Still waiting..."; sleep 10; done'
    - echo "VLLM server should be ready now"

    - echo "--= Setting up Virtual Environment =--"
    - conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/main
    - conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/r
    - echo "--= Calling install_alfred.sh =--"
    - bash install_alfred.sh

    - echo "--= Activating Environment =--"
    - eval "$$(conda shell.bash hook)"
    - conda activate embench

    - echo "--= Installing Azure dependencies =--"
    - pip install azure-identity
    - pip install azure-core

    # Ensure the X11 socket directory exists and is world-writable (fixes Xvfb permission error)
    - sudo mkdir -p /tmp/.X11-unix
    - sudo chmod 1777 /tmp/.X11-unix
    - echo "--= Init Complete =--"

    - echo "--= Creating Display =--"
    - chmod +x embodiedbench/create_display.sh
    - bash embodiedbench/create_display.sh || true

    # Basic environment setup
    - export XDG_RUNTIME_DIR=/tmp/runtime-$$USER
    - mkdir -p /tmp/runtime-$$USER
    - chmod 700 /tmp/runtime-$$USER
    - export ALSA_CARD=-1
    - export SDL_AUDIODRIVER=dummy
    - export SDL_VIDEODRIVER=dummy

    # Model API configuration
    - export remote_url=http://localhost:8000/v1/chat/completions

    # Run evaluation
    - echo "--= Running EmbodiedBench Evaluation =--"
    - timeout 1800 python -m embodiedbench.main env=eb-alf model_name=$$MODEL_NAME model_type="custom" exp_name={model_config}

    submit_args:
      env:
        NCCL_IB_DISABLE: 0
        NCCL_DEBUG: INFO
        NCCL_IB_TIMEOUT: 60
        MKL_THREADING_LAYER: GNU
        SHARED_MEMORY_PERCENT: 0.5
        NVIDIA_VISIBLE_DEVICES: all
        NVIDIA_DRIVER_CAPABILITIES: compute,utility,video,graphics
        _AZUREML_SINGULARITY_JOB_UAI: /subscriptions/2cd190bb-b42a-477c-b1bb-2f20932d8dc5/resourceGroups/lalidenaml/providers/Microsoft.ManagedIdentity/userAssignedIdentities/lalidenamlid

  max_trials: 1
  type: grid
  params:
  - name: model_config
    spec: discrete
    values:
    - Qwen2.5-VL-7B-Instruct_SFT_C::magmathor/training/checkpoints/Qwen2.5-VL-7B-Instruct__sft__llamafactory_ai2thor_correct-only_tag_bs1_accum1_lr1e-5_cosine_0.1_ft_llm_qwen_base_pix_25088_50176_model_multinode/checkpoint-2100/